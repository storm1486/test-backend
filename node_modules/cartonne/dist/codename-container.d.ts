import type { BlockCodec } from "multiformats/codecs/interface";
import type { SyncMultihashHasher } from "multiformats/hashes/interface";
export interface Codename {
    name: string;
    code: number;
}
export declare class CodenameContainer<T extends Codename> {
    #private;
    readonly name: string;
    constructor(name: string);
    add(codec: T): void;
    has(id: string | number): boolean;
    get(id: string | number | T): T;
    delete(id: string | number): void;
}
export type CodecContainer = CodenameContainer<BlockCodec<number, any>>;
export type HasherContainer = CodenameContainer<SyncMultihashHasher>;
//# sourceMappingURL=codename-container.d.ts.map