type StringLiteral<T> = T extends string ? (string extends T ? never : T) : never;
declare const __OPAQUE_TYPE__: unique symbol;
export type Opaque<Type, Token extends string> = Token extends StringLiteral<Token> ? Type & {
    readonly [__OPAQUE_TYPE__]: Token;
} : never;
export {};
//# sourceMappingURL=opaque.d.ts.map