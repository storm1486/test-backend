import type { EncodedDagJWS, EncodedDagJWSResult } from '@composedb/types';
import type { DagJWS, DagJWSResult } from 'dids';
/** @internal */
export declare function decodeDagJWS({ payload, signatures, link }: EncodedDagJWS): DagJWS;
/** @internal */
export declare function encodeDagJWS({ payload, signatures, link }: DagJWS): EncodedDagJWS;
/** @internal */
export declare function decodeDagJWSResult({ jws, linkedBlock }: EncodedDagJWSResult): DagJWSResult;
/** @internal */
export declare function encodeDagJWSResult({ jws, linkedBlock }: DagJWSResult): EncodedDagJWSResult;
/** @internal */
export declare function decodeSignedMap<K extends string>(data: Record<K, Array<EncodedDagJWSResult>>): Record<K, Array<DagJWSResult>>;
/** @internal */
export declare function encodeSignedMap<K extends string>(data: Record<K, Array<DagJWSResult>>): Record<K, Array<EncodedDagJWSResult>>;
