import type { CeramicApi, SignedCommitContainer } from '@ceramicnetwork/common';
import { type ModelDefinition, type ModelViewsDefinitionV2 } from '@ceramicnetwork/stream-model';
import type { FieldsIndex } from '@composedb/types';
import type { AbstractModelDefinition } from './types.js';
export type IntermediaryCompositeDefinition = {
    commits: Record<string, Array<SignedCommitContainer>>;
    models: Record<string, ModelDefinition>;
    aliases: Record<string, string>;
    indices: Record<string, Array<FieldsIndex>>;
    views: Record<string, ModelViewsDefinitionV2>;
};
export declare function createIntermediaryCompositeDefinition(ceramic: CeramicApi, models: Record<string, AbstractModelDefinition>): Promise<IntermediaryCompositeDefinition>;
