import { printSchema } from 'graphql';
import { createGraphQLSchema } from './schema.js';
/**
 * Use or create a GraphQL schema based on the provided parameters.
 */ export function getSchema(params) {
    const { definition, readonly, schema } = params;
    if (schema != null) {
        return schema;
    }
    if (definition == null) {
        throw new Error(`Invalid parameters to get schema: missing definition or schema`);
    }
    return createGraphQLSchema({
        definition,
        readonly
    });
}
/**
 * Create a GraphQL schema from a runtime composite definition and return its string
 * representation.
 */ export function printGraphQLSchema(definition, readonly = false) {
    return printSchema(createGraphQLSchema({
        definition,
        readonly
    }));
}
