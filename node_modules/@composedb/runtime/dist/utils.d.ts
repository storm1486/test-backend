import type { RuntimeCompositeDefinition } from '@composedb/types';
import { type GraphQLSchema } from 'graphql';
export type GetSchemaParams = {
    /**
     * Runtime composite definition, created using the {@linkcode devtools.Composite Composite}
     * development tools.
     */
    definition?: RuntimeCompositeDefinition;
    /**
     * Set the schema to read-only, disabling mutations support.
     */
    readonly?: boolean;
    /**
     * GraphQL Schema to use, ignores the `definition` and `readonly` parameters if provided.
     */
    schema?: GraphQLSchema;
};
/**
 * Use or create a GraphQL schema based on the provided parameters.
 */
export declare function getSchema(params: GetSchemaParams): GraphQLSchema;
/**
 * Create a GraphQL schema from a runtime composite definition and return its string
 * representation.
 */
export declare function printGraphQLSchema(definition: RuntimeCompositeDefinition, readonly?: boolean): string;
