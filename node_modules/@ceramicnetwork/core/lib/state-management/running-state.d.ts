import { StreamStateSubject, SubscriptionSet } from '@ceramicnetwork/common';
import { StreamID } from '@ceramicnetwork/streamid';
import type { Subscription } from 'rxjs';
import type { StreamState, RunningStateLike } from '@ceramicnetwork/common';
import type { CID } from 'multiformats/cid';
export declare class RunningState extends StreamStateSubject implements RunningStateLike {
    readonly id: StreamID;
    readonly subscriptionSet: SubscriptionSet;
    private _pinnedCommits?;
    constructor(initial: StreamState, pinned: boolean);
    get tip(): CID;
    get state(): StreamState;
    get pinnedCommits(): Set<string> | null;
    get isPinned(): boolean;
    add(subscription: Subscription): void;
    complete(): void;
    markAsPinned(): void;
    markAsUnpinned(): void;
}
//# sourceMappingURL=running-state.d.ts.map