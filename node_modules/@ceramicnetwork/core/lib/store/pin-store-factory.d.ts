import { DiagnosticsLogger, IpfsApi, PinningBackendStatic } from '@ceramicnetwork/common';
import { PinStore } from './pin-store.js';
import { Repository } from '../state-management/repository.js';
import type { IPLDRecordsCache } from './ipld-records-cache.js';
export declare type Props = {
    pinningEndpoints?: string[];
    pinningBackends?: PinningBackendStatic[];
};
export declare class PinStoreFactory {
    readonly ipfs: IpfsApi;
    readonly ipldRecordsCache: IPLDRecordsCache;
    readonly repository: Repository;
    readonly logger: DiagnosticsLogger;
    readonly pinningEndpoints: string[];
    readonly pinningBackends: PinningBackendStatic[];
    private _stateStore;
    constructor(ipfs: IpfsApi, ipldRecordsCache: IPLDRecordsCache, repository: Repository, props: Props, logger: DiagnosticsLogger);
    createPinStore(): PinStore;
}
//# sourceMappingURL=pin-store-factory.d.ts.map