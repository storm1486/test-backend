import { StreamID } from '@ceramicnetwork/streamid';
import { DiagnosticsLogger, StreamState, StreamStateHolder } from '@ceramicnetwork/common';
import { ObjectStore } from './object-store.js';
import { IKVStore } from './ikv-store.js';
export declare class StreamStateStore extends ObjectStore<StreamID, StreamState> {
    #private;
    constructor(logger: DiagnosticsLogger);
    get networkName(): string;
    saveFromStreamStateHolder(streamStateHolder: StreamStateHolder): Promise<void>;
    open(store: IKVStore): Promise<void>;
    listStoredStreamIDs(streamId?: StreamID | null, limit?: number): Promise<string[]>;
}
//# sourceMappingURL=stream-state-store.d.ts.map