import { StreamID } from '@ceramicnetwork/streamid';
import { PriorityQueue } from '@datastructures-js/priority-queue';
interface IQuery {
    timestamp: number;
    streamID: StreamID;
    queryID: string;
}
export declare class Query implements IQuery {
    readonly timestamp: number;
    readonly streamID: StreamID;
    readonly queryID: string;
    constructor(timestamp: number, streamID: StreamID, queryID: string);
}
export declare class OutstandingQueries {
    readonly queryQueue: PriorityQueue<IQuery>;
    readonly queryMap: Map<string, Query>;
    private _minutesThreshold;
    add(id: string, query: Query): void;
    private remove;
    private _isExpired;
    private _cleanUpExpiredQueries;
}
export {};
//# sourceMappingURL=outstanding-queries.d.ts.map