var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TaskQueue_pq;
import PQueue from 'p-queue';
export const noop = () => {
};
export class TaskQueue {
    constructor(concurrency = 1, onError = noop) {
        this.onError = onError;
        _TaskQueue_pq.set(this, void 0);
        __classPrivateFieldSet(this, _TaskQueue_pq, new PQueue({ concurrency: concurrency }), "f");
    }
    get size() {
        return __classPrivateFieldGet(this, _TaskQueue_pq, "f").size + __classPrivateFieldGet(this, _TaskQueue_pq, "f").pending;
    }
    add(task, onFinally) {
        this.run(task)
            .catch((error) => {
            this.onError(error, this.add.bind(this, task, onFinally));
        })
            .finally(() => onFinally?.());
    }
    run(task) {
        return __classPrivateFieldGet(this, _TaskQueue_pq, "f").add(task);
    }
    onIdle() {
        return __classPrivateFieldGet(this, _TaskQueue_pq, "f").onIdle();
    }
    clear() {
        __classPrivateFieldGet(this, _TaskQueue_pq, "f").clear();
    }
    pause() {
        __classPrivateFieldGet(this, _TaskQueue_pq, "f").pause();
    }
}
_TaskQueue_pq = new WeakMap();
//# sourceMappingURL=task-queue.js.map