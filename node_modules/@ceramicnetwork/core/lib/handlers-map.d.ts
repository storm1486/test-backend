import { Stream, StreamHandler } from '@ceramicnetwork/common';
import { DiagnosticsLogger } from '@ceramicnetwork/common';
declare type Registry = Map<number, StreamHandler<Stream>>;
export declare class HandlersMap {
    private readonly logger;
    private readonly handlers;
    constructor(logger: DiagnosticsLogger, handlers?: Registry);
    get<T extends Stream>(type: string | number): StreamHandler<T>;
    add<T extends Stream>(streamHandler: StreamHandler<T>): HandlersMap;
}
export {};
//# sourceMappingURL=handlers-map.d.ts.map