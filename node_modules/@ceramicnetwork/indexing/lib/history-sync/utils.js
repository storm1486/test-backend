import { pathString, pathByIndex } from '@ceramicnetwork/anchor-utils';
const METADATA_PATH = '2';
export class MerkleTreeLoader {
    constructor(ipfsService, rootCid) {
        this.ipfsService = ipfsService;
        this.rootCid = rootCid;
    }
    async getMetadata() {
        if (!this._metadata) {
            this._metadata = await this.ipfsService.retrieveFromIPFS(this.rootCid, METADATA_PATH);
        }
        return this._metadata;
    }
    async getLeafData(index) {
        const metadata = await this.getMetadata();
        const path = pathByIndex(index, metadata.numEntries);
        const parent = await this.ipfsService.retrieveFromIPFS(this.rootCid, pathString(path.slice(0, -1)));
        const lastPathDirection = path[path.length - 1];
        const cid = parent[lastPathDirection];
        return { cid, path };
    }
}
//# sourceMappingURL=utils.js.map