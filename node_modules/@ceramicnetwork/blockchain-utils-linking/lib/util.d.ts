import type { AccountId } from 'caip';
export interface LinkProof {
    version: number;
    message: string;
    signature: string;
    account: string;
    did?: string;
    timestamp?: number;
    address?: string;
    type?: string;
    chainId?: number;
}
export interface RpcMessage {
    jsonrpc: string;
    id: number;
    method: string;
    params: any;
}
export interface ConsentMessage {
    message: string;
    timestamp?: number;
}
export interface CapabilityOpts {
    domain?: string;
    statement?: string;
    version?: string;
    nonce?: string;
    requestId?: string;
    expirationTime?: string;
    resources?: Array<string>;
}
export declare function getConsentMessage(did: string, addTimestamp?: boolean): ConsentMessage;
export declare function encodeRpcMessage(method: string, params?: any): any;
export declare function asOldCaipString(input: AccountId): string;
//# sourceMappingURL=util.d.ts.map