import Ajv from 'ajv/dist/2020.js';
import addFormats from 'ajv-formats';
import { LRUCache } from 'least-recent';
const AJV_CACHE_SIZE = 500;
function buildAjv() {
    const validator = new Ajv({
        strict: true,
        allErrors: true,
        allowMatchingProperties: false,
        ownProperties: false,
        unevaluated: false,
    });
    addFormats(validator);
    return validator;
}
export class SchemaValidation {
    constructor() {
        this.validators = new LRUCache(AJV_CACHE_SIZE);
    }
    validateSchema(content, schema, schemaId) {
        let validator = this.validators.get(schemaId);
        if (!validator) {
            validator = buildAjv();
            this.validators.set(schemaId, validator);
        }
        const isValid = validator.validate(schema, content);
        if (!isValid) {
            const errorMessages = validator.errorsText();
            throw new Error(`Validation Error: ${errorMessages}`);
        }
    }
}
//# sourceMappingURL=schema-utils.js.map