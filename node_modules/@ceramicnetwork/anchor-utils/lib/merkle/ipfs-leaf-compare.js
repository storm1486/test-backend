export class IpfsLeafCompare {
    constructor(logger) {
        this.logger = logger;
        this.compare = this.compare.bind(this);
    }
    compare(left, right) {
        try {
            const leftModel = left.data.metadata.model?.toString();
            const rightModel = right.data.metadata.model?.toString();
            if (leftModel !== rightModel) {
                if (leftModel != null) {
                    return rightModel == null
                        ? -1
                        : leftModel.localeCompare(rightModel);
                }
                return 1;
            }
            const leftController = String(left.data.metadata.controllers[0]);
            const rightController = String(right.data.metadata.controllers[0]);
            if (leftController !== rightController) {
                return leftController.localeCompare(rightController);
            }
            return left.data.streamId.toString().localeCompare(right.data.streamId.toString());
        }
        catch (err) {
            this.logger.err(`Error while comparing stream ${left.data.streamId.toString()} to stream ${right.data.streamId.toString()}. Error: ${err}`);
            throw err;
        }
    }
}
//# sourceMappingURL=ipfs-leaf-compare.js.map