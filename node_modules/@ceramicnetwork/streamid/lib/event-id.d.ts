import { CID } from 'multiformats/cid';
export declare class EventID {
    protected readonly _tag: symbol;
    private readonly _networkID;
    private readonly _separator;
    private readonly _controller;
    private readonly _init;
    private readonly _eventHeight;
    private readonly _event;
    static isInstance(instance: any): instance is EventID;
    constructor(networkID: number, separator: Uint8Array, controller: Uint8Array, init: Uint8Array, eventHeight: number, event: CID);
    static create(networkID: number | string, separator: string | Uint8Array, controller: string, init: CID | string, eventHeight: number, event: CID | string): EventID;
    get bytes(): Uint8Array;
    static fromBytes(bytes: Uint8Array): EventID;
    static fromString(str: string): EventID;
    toString(): string;
    equals(other: EventID): boolean;
    toUrl(): string;
    get networkID(): number;
    get separator(): Uint8Array;
    get controller(): Uint8Array;
    get init(): Uint8Array;
    get eventHeight(): number;
    get event(): CID;
    [Symbol.toPrimitive](): string;
}
//# sourceMappingURL=event-id.d.ts.map