import { signatureVerify } from '@polkadot/util-crypto';
import * as uint8arrays from 'uint8arrays';
import { normalizeAccountId } from '@ceramicnetwork/common';
const namespace = 'polkadot';
const stringHex = (str) => `0x${uint8arrays.toString(uint8arrays.fromString(str), 'base16')}`;
async function validateLink(proof) {
    const address = normalizeAccountId(proof.account).address;
    const message = stringHex(proof.message);
    const res = await signatureVerify(message, proof.signature, address);
    return res.isValid ? proof : null;
}
export const handler = {
    namespace,
    validateLink,
};
//# sourceMappingURL=polkadot.js.map