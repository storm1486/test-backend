import tendermint from '@tendermint/sig';
import { cosmos } from '@ceramicnetwork/blockchain-utils-linking';
import * as uint8arrays from 'uint8arrays';
import { normalizeAccountId } from '@ceramicnetwork/common';
const namespace = 'cosmos';
const stringEncode = (str) => uint8arrays.toString(uint8arrays.fromString(str), 'base64pad');
const stringDecode = (str) => uint8arrays.toString(uint8arrays.fromString(str, 'base64pad'));
export async function validateLink(proof) {
    const account = normalizeAccountId(proof.account);
    const encodedMsg = stringEncode(proof.message);
    const payload = cosmos.asTransaction(account.address, encodedMsg);
    const sigObj = JSON.parse(stringDecode(proof.signature));
    const Tx = { ...payload, ...cosmos.getMetaData(), signatures: [sigObj] };
    const is_sig_valid = tendermint.verifyTx(Tx, cosmos.getMetaData());
    return is_sig_valid ? proof : null;
}
export const handler = {
    namespace,
    validateLink,
};
//# sourceMappingURL=cosmos.js.map