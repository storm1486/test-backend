import { type DiagnosticsLogger } from '@ceramicnetwork/common';
import { IKVStore, IKVStoreFindResult, StoreSearchParams } from '@ceramicnetwork/core';
export declare class S3Store implements IKVStore {
    #private;
    constructor(networkName: string, diagnosticsLogger: DiagnosticsLogger, bucketName: string, customEndpoint?: string);
    get networkName(): string;
    init(): Promise<void>;
    close(useCaseName?: string): Promise<void>;
    isEmpty(params?: StoreSearchParams): Promise<boolean>;
    exists(key: string, useCaseName?: string): Promise<boolean>;
    find(params?: StoreSearchParams): Promise<Array<IKVStoreFindResult>>;
    findKeys(params?: StoreSearchParams): Promise<Array<string>>;
    get(key: string, useCaseName?: string): Promise<any>;
    put(key: string, value: any, useCaseName?: string): Promise<void>;
    del(key: string, useCaseName?: string): Promise<void>;
}
//# sourceMappingURL=s3-store.d.ts.map