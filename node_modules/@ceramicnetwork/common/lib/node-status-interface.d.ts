export interface NodeStatusResponse {
    runId: string;
    uptimeMs: number;
    network: string;
    anchor: AnchorNodeStatus;
    ipfs: IpfsNodeStatus;
    composeDB?: ComposeDBStatus;
}
export interface IpfsNodeStatus {
    peerId: string;
    addresses: Array<string>;
}
export interface AnchorNodeStatus {
    anchorServiceUrl: string;
    ethereumRpcEndpoint: string | null;
    chainId: string;
    pendingAnchors: number;
}
export interface ComposeDBStatus {
    indexedModels: Array<string>;
    syncs?: SyncStatus;
}
export interface SyncStatus {
    activeSyncs: Array<ActiveSyncStatus>;
    continuousSync: Array<ContinuousSyncStatus>;
    pendingSyncs: Array<PendingSyncStatus>;
}
export interface ActiveSyncStatus {
    startBlock: number;
    currentBlock: number;
    endBlock: number;
    models: Array<string>;
    createdAt: Date;
    startedAt: Date;
}
export interface ContinuousSyncStatus {
    startBlock: number;
    latestBlock: number;
    confirmations: number;
    currentBlock: number;
    models: Array<string>;
}
export interface PendingSyncStatus {
    startBlock: number;
    endBlock: number;
    models: Array<string>;
    createdAt: Date;
}
//# sourceMappingURL=node-status-interface.d.ts.map