import { StreamUtils, fetchJson } from '@ceramicnetwork/common';
import { serializeObjectForHttpPost } from './utils.js';
export class RemoteIndexApi {
    constructor(apiUrl) {
        this._fetchJson = fetchJson;
        this._collectionURL = new URL('./collection', apiUrl);
        this._countURL = new URL('./collection/count', apiUrl);
    }
    async count(query) {
        const response = await this._fetchJson(this._countURL, {
            method: 'POST',
            body: serializeObjectForHttpPost(query),
        });
        return response.count;
    }
    async query(query) {
        const response = await this._fetchJson(this._collectionURL, {
            method: 'POST',
            body: serializeObjectForHttpPost(query),
        });
        const edges = response.edges.map((e) => {
            return {
                cursor: e.cursor,
                node: StreamUtils.deserializeState(e.node),
            };
        });
        return {
            edges: edges,
            pageInfo: response.pageInfo,
        };
    }
}
//# sourceMappingURL=remote-index-api.js.map