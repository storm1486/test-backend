import { Model } from '@ceramicnetwork/stream-model';
import { CommitData, Context, StreamConstructor, StreamHandler, StreamState } from '@ceramicnetwork/common';
export declare class ModelHandler implements StreamHandler<Model> {
    private readonly _schemaValidator;
    private readonly _viewsValidator;
    get type(): number;
    get name(): string;
    get stream_constructor(): StreamConstructor<Model>;
    constructor();
    applyCommit(commitData: CommitData, context: Context, state?: StreamState): Promise<StreamState>;
    _applyGenesis(commitData: CommitData, context: Context): Promise<StreamState>;
    _applyAnchor(commitData: CommitData, state: StreamState): Promise<StreamState>;
}
//# sourceMappingURL=model-handler.d.ts.map